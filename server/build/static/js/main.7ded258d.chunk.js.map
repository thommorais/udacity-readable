{"version":3,"sources":["enviroments.js","utils/API.js","AllPosts/actions.js","Categories/actions.js","Comments/actions.js","combinedReducers.js","AllPosts/reducers.js","Comments/reducers.js","Categories/reducers.js","AllPosts/PostHeader.js","voteControl/index.js","newPost/index.js","AllPosts/Sorter.js","AllPosts/index.js","Categories/index.js","AllPosts/PostBody.js","CommentForm/index.js","Comment/index.js","Comments/index.js","Single/index.js","App.js","index.js"],"names":["api","headers","Content-Type","Accept","Authorization","fetchPosts","url","fetch","concat","then","res","json","catch","addPost","data","arguments","length","undefined","options","method","body","JSON","stringify","removePost","GET_ALL_POSTS","IS_LOADING","UPDATE_POST_VOTE","NEW_POST","EDIT_POST","REMOVE_POST","COMMENTS_COUNT","isLoading","type","fetchPostsAction","posts","postVoteAction","id","_ref2","option","newPostAction","post","removePostByIdAction","postID","editPostAction","updateCommentCount","updateComment","GET_CATEGORIES","SET_CURRENT_CATEGORY","getCategories","categories","setCategory","category","currentCategory","GET_COMMENTS","ADD_COMMENT","EDIT_COMMENT","UPDATE_COMMENT_VOTE","REMOVE_COMMENT","getCommentsAction","comments","createCommentAction","comment","updateCommentVoteAction","_ref3","removeCommentAction","commentID","editCommentAction","combineReducers","state","action","Object","toConsumableArray","map","objectSpread","voteScore","parentId","commentCount","count","filter","each","update","PostHeader","this","props","author","react_default","a","createElement","title","className","PureComponent","connect","voteControl","currentCount","updateVote","vote","_this","setState","prevState","_this2","onClick","dispatch","_ref4","asyncToGenerator","regenerator_default","mark","_callee3","wrap","_context3","prev","next","stop","_x3","apply","updateCommentVote","_callee2","_context2","_x2","updatePostVote","NewPostForm","enableSubmission","_this$state","updateTitle","_ref","target","value","updateAuthor","updateBody","_ref5","_ref6","updateCategory","_ref7","_ref8","handleSubmit","event","preventDefault","_this$state2","mode","Math","random","toString","substr","timestamp","Date","now","showForm","closer","clearForm","_this$props$post","_this$state3","onSubmit","name","placeholder","defaultValue","onChange","autoComplete","cat","key","path","disabled","_ref9","newPost","editPost","_callee5","_context5","_x5","Sorter","updateSort","func","htmlFor","ListOfPosts","sorter","addNewPost","sortBy","modifier","sortedPosts","sort","p","n","Fragment","Sorter_Sorter","src_newPost","Link","to","AllPosts_PostHeader","src_voteControl","PostSort","setCat","catName","changeCat","loadCats","_this$props","bind","Component","_callee","_context","sent","_x","loadCategories","PostBody","CommentForm","createComment","handleName","handleComment","addComment","editComment","Comment","editing","deleteComment","src_CommentForm","commentId","_callee4","_context4","_x4","CommentList","loadComments","src_Comment","withRouter","Single","editingPost","creatingAcomment","editCurrentPost","_this$props2","deletePost","PostBody_PostBody","Comments","postId","removePostById","App","getPosts","Categories","Switch","Route","exact","render","AllPosts_ListOfPosts","match","filterByCategory","params","src_Single","filterById","loading","listState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combinedReducers","applyMiddleware","thunkMiddleware","ReactDOM","react_redux_es","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7ded258d.chunk.js","sourcesContent":["export const api = \"http://localhost:3001\"\n\nexport const headers = {\n  'Content-Type': 'application/json',\n  'Accept' : 'application/json',\n  'Authorization' : 'boburmirzo'\n}\n\n\n\n","import {headers} from '../enviroments'\n\nexport function fetchPosts(url){\n\n  return fetch(`${url}`, {headers})\n      .then(res => res.json())\n      .catch(res => res)\n}\n\n\nexport function addPost(url, data = {}, method = 'POST'){\n\n  const options = {\n    method,\n    headers,\n    body: JSON.stringify(data)\n  }\n\n  return fetch(url, options)\n  .then(res => res.json)\n  .then(res => res)\n\n}\n\nexport function removePost(url){\n\n  const options = {\n    method:'DELETE',\n    headers\n  }\n\n  return fetch(url, options)\n  .then(res => res.json)\n  .then(data => data)\n\n}\n\n","import { fetchPosts, addPost, removePost } from '../utils/API'\nimport { api } from '../enviroments'\n\nexport const GET_ALL_POSTS = 'GET_ALL_POSTS'\nexport const SAVE_POST = 'SAVE_POST'\nexport const GET_POST = 'GET_POST'\nexport const IS_LOADING = 'IS_LOADING'\nexport const UPDATE_POST_VOTE = 'UPDATE_POST_VOTE'\nexport const NEW_POST = 'NEW_POST'\nexport const EDIT_POST = 'EDIT_POST'\nexport const REMOVE_POST = 'REMOVE_POST'\nexport const COMMENTS_COUNT = 'COMMENTS_COUNT'\n\nexport function isLoading(isLoading) {\n    return {\n        type: IS_LOADING,\n        isLoading\n    }\n}\n\n// get all posts\nexport function fetchPostsAction(posts = []) {\n    return {\n        type: GET_ALL_POSTS,\n        posts\n    }\n}\n\nexport function getPosts(url = 'posts') {\n    return async(dispatch) => {\n        await dispatch(isLoading(true))\n        const posts = await fetchPosts(`${api}/${url}`)\n        await dispatch(fetchPostsAction(posts))\n        await dispatch(isLoading(true))\n    }\n}\n\n// update comment vote\nconst postVoteAction = (id, {option}) => {\n  return {\n    type: UPDATE_POST_VOTE,\n    id,\n    option\n  }\n}\n\nexport function updatePostVote(vote, id){\n\n    const url = `${api}/posts/${id}`\n\n    return async(dispatch) => {\n        await addPost(url, vote)\n        await dispatch(postVoteAction(id, vote))\n    }\n\n}\n\n// add new post\nconst newPostAction = post => {\n  return {\n    type: NEW_POST,\n    post\n  }\n}\n\nexport function newPost(post){\n    const url = `${api}/posts`\n    return async(dispatch) => {\n        await addPost(url, post)\n        await dispatch(newPostAction(post))\n    }\n}\n\n// remove post\nconst removePostByIdAction = postID => {\n  return {\n    type: REMOVE_POST,\n    postID\n  }\n}\n\n\nexport function removePostById(postId){\n    const url = `${api}/posts/${postId}`\n    return async(dispatch) => {\n        await dispatch(removePostByIdAction(postId))\n        await removePost(url)\n    }\n}\n\n// Edit Post\nconst editPostAction = post => {\n  return {\n    type: EDIT_POST,\n    post\n  }\n}\n\nexport function editPost(post){\n\n    const url = `${api}/posts/${post.id}`\n\n    return async(dispatch) => {\n        await addPost(url, post, 'PUT')\n        await dispatch(editPostAction(post))\n    }\n\n}\n\nexport function updateCommentCount(updateComment) {\n    return {\n        type: COMMENTS_COUNT,\n        updateComment\n    }\n}","import { api, } from '../enviroments'\nimport { fetchPosts } from '../utils/API'\n\nexport const GET_CATEGORIES = 'GET_CATEGORIES'\nexport const SET_CURRENT_CATEGORY = 'SET_CURRENT_CATEGORY'\n\n// load categories\nconst getCategories = categories => {\n  return {\n    type: GET_CATEGORIES,\n    categories\n  }\n}\n\nexport function loadCategories(url = 'categories') {\n    return async(dispatch) => {\n        const categories = await fetchPosts(`${api}/${url}`)\n        await dispatch(getCategories(categories))\n    }\n}\n\n\n// set category\nexport const setCategory = (category = null) => {\n  return {\n    type: SET_CURRENT_CATEGORY,\n    currentCategory: category\n  }\n}\n","import { api, } from '../enviroments'\nimport { fetchPosts, addPost, removePost } from '../utils/API'\n\nexport const GET_COMMENTS = 'GET_COMMENTS'\nexport const ADD_COMMENT = 'ADD_COMMENT'\nexport const EDIT_COMMENT = 'EDIT_COMMENT'\nexport const UPDATE_COMMENT_VOTE = 'UPDATE_COMMENT_VOTE'\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT'\n\n// load categories\nconst getCommentsAction = comments => {\n  return {\n    type: GET_COMMENTS,\n    comments\n  }\n}\n\nexport function loadComments(id) {\n\n    const url = `${api}/posts/${id}/comments`\n\n    return async(dispatch) => {\n        const comments = await fetchPosts(url)\n        await dispatch(getCommentsAction(comments))\n    }\n}\n\n// create comment\nconst createCommentAction = comment => {\n  return {\n    type: ADD_COMMENT,\n    comment\n  }\n}\n\nexport function addComment(comment){\n\n    const url = `${api}/comments`\n\n    return async(dispatch) => {\n        await addPost(url, comment)\n        await dispatch(createCommentAction(comment))\n    }\n}\n\n// // update comment vote\nconst updateCommentVoteAction = ({option}, id) => {\n  return {\n    type: UPDATE_COMMENT_VOTE,\n    option,\n    id\n  }\n}\n\nexport function updateCommentVote(vote, id){\n\n    const url = `${api}/comments/${id}`\n\n    return async(dispatch) => {\n        await addPost(url, vote)\n        await dispatch(updateCommentVoteAction(vote, id))\n    }\n\n}\n\n// remove comment\nconst removeCommentAction = commentID => {\n  return {\n    type: REMOVE_COMMENT,\n    commentID\n  }\n}\n\nexport function deleteComment(commentID){\n    const url = `${api}/comments/${commentID}`\n    return async(dispatch) => {\n        await dispatch(removeCommentAction(commentID))\n        await removePost(url)\n    }\n}\n\n// edit comment\nconst editCommentAction = comment => {\n  return {\n    type: EDIT_COMMENT,\n    comment\n  }\n}\n\nexport function editComment(comment){\n\n    const url = `${api}/comments/${comment.id}`\n\n    return async(dispatch) => {\n        await addPost(url, comment, 'PUT')\n        await dispatch(editCommentAction(comment))\n    }\n}\n","import {combineReducers} from 'redux'\nimport posts from './AllPosts/reducers'\nimport {categories, currentCategory} from './Categories/reducers'\nimport {comments} from './Comments/reducers'\n\nexport default combineReducers({\n    posts,\n    comments,\n    categories,\n    currentCategory\n})","import {GET_ALL_POSTS, UPDATE_POST_VOTE, NEW_POST, REMOVE_POST, EDIT_POST, COMMENTS_COUNT} from './actions'\n\nexport default function getAllPosts(state = [], action) {\n\n    switch(action.type){\n\n        case NEW_POST: {\n            const {post} = action\n            return [...state, post]\n        }\n\n        case GET_ALL_POSTS: {\n            const {posts} = action\n            return [...state, ...posts]\n        }\n\n        case UPDATE_POST_VOTE: {\n\n            const {id, option} = action\n\n            const update = state.map(post => {\n                if(post.id === id) {\n                    return {\n                        ...post,\n                        voteScore: post.voteScore + (option === 'downVote' ? -1 : 1)\n                    }\n                }\n                return post\n            })\n\n            return update\n        }\n\n        case COMMENTS_COUNT: {\n\n            const {updateComment} = action\n\n            const update = state.map(post => {\n                if(post.id === updateComment.parentId) {\n                    return {\n                        ...post,\n                        commentCount: (post.commentCount ? post.commentCount : 0) + updateComment.count\n                    }\n                }\n                return post\n            })\n\n            return update\n        }\n\n        case REMOVE_POST: {\n            const { postID } = action\n            return state.filter(post => post.id !== postID)\n        }\n\n        case EDIT_POST: {\n            const { post } = action\n\t\t\treturn [...state.filter(each => each.id !== post.id ), post]\n        }\n\n        default:{\n            return state\n        }\n\n    }\n\n}\n","import {GET_COMMENTS, ADD_COMMENT, UPDATE_COMMENT_VOTE, REMOVE_COMMENT, EDIT_COMMENT} from './actions'\n\n export function comments(state = [], action) {\n\n  const { type, comments } = action\n\n  switch (type) {\n\n    case GET_COMMENTS:{\n        return [...comments]\n    }\n\n    case ADD_COMMENT:{\n      const { comment } = action\n      return [...state, comment]\n    }\n\n    case EDIT_COMMENT:{\n      const { comment } = action\n      return [...state.filter(each => each.id !== comment.id ), comment]\n    }\n\n    case REMOVE_COMMENT: {\n      const { commentID } = action\n      return state.filter(comment => comment.id !== commentID)\n    }\n\n    case UPDATE_COMMENT_VOTE:{\n\n      const {id, option} = action\n      const update = state.map(comment => {\n          if(comment.id === id){\n              return {\n                ...comment,\n                voteScore: comment.voteScore + (option === 'downVote' ? -1 : 1)\n              }\n          }\n          return comment\n      })\n\n      return [...update]\n    }\n\n    default: {\n      return state\n    }\n\n\n  }\n\n}\n","import {GET_CATEGORIES, SET_CURRENT_CATEGORY } from './actions'\n\n\nexport function categories(state = [], action) {\n\n  const {type, categories} = action\n\n  switch (type) {\n\n    case GET_CATEGORIES:\n      return [...state, ...categories.categories]\n\n    default:\n      return state\n  }\n}\n\nexport function currentCategory(state = null,  action) {\n\n  const {type} = action\n\n  switch (type) {\n\n    case SET_CURRENT_CATEGORY:\n      const {currentCategory} = action\n      return currentCategory\n\n    default:\n      return state\n  }\n}\n\n","import React, {PureComponent} from 'react'\nimport { connect } from 'react-redux'\n\nclass PostHeader extends PureComponent{\n\n  render(){\n    const {post} = this.props\n    const {author, commentCount} = post\n\n    return(\n      <header>\n        <h4>{post.category}</h4>\n        <h1>{post.title}</h1>\n        <div className=\"comment-header\">\n          {commentCount ? commentCount : 0 } {commentCount === 1 ? 'Comment ' : 'Comments '}\n           | Author: {author}\n        </div>\n      </header>\n    )\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    comments: state.comments,\n  }\n}\n\n\nexport default connect(mapStateToProps)(PostHeader)\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { updateCommentVote } from '../Comments/actions'\nimport { updatePostVote } from '../AllPosts/actions'\n\nclass voteControl extends PureComponent {\n\n  state = {\n      currentCount: 1\n  }\n\n  updateVote = vote =>{\n\n     const option = (vote === 1) ? 'upVote' : 'downVote'\n\n     this.setState( prevState => ({\n        currentCount: prevState.currentCount + vote\n     }))\n\n    const {type} = this.props\n\n    this.props[type]({option}, this.props.id)\n\n  }\n\n  componentDidMount(){\n      const {currentCount} = this.props\n      this.setState({currentCount})\n  }\n\n  render(){\n\n    const {currentCount} = this.state\n    const { type} = this.props\n\n    return (\n        <div className={`vote-control ${type}`}>\n            <button type=\"button\" className=\"voteUp\" onClick={() => this.updateVote(1)}>▲</button>\n            <span>{currentCount}</span>\n            <button type=\"button\" className=\"voteDown\" onClick={() => this.updateVote(-1)}>▼</button>\n        </div>\n    )\n  }\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    comments: (update, id) => dispatch(updateCommentVote(update, id)),\n    posts: (update, id) => dispatch(updatePostVote(update, id))\n  }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n  )(voteControl)\n\n","import React, {PureComponent} from 'react'\nimport { connect } from 'react-redux'\nimport { newPost, editPost } from '../AllPosts/actions'\n\nclass NewPostForm extends PureComponent{\n\n  state = {\n    title: '',\n    author: '',\n    body: '',\n    category: '',\n    enableSubmission: false\n  }\n\n  enableSubmission = () => {\n\n    const {title, body, author, category} = this.state\n\n    if (title.length > 5 && body.length > 5 && !!category && author.length > 1){\n      this.setState( () =>  ({enableSubmission: true}) )\n    } else {\n      this.setState( () =>  ({enableSubmission: false}) )\n    }\n\n  }\n\n  updateTitle = ({target}) => {\n    this.setState(({title}) => ({title: target.value}), () => this.enableSubmission() )\n  }\n\n  updateAuthor = ({target}) => {\n    this.setState( ({author}) => ({author: target.value}), () => this.enableSubmission())\n  }\n\n  updateBody = ({target}) => {\n     this.setState( ({body}) => ({body: target.value}), () => this.enableSubmission() )\n  }\n\n  updateCategory = ({target}) => {\n    this.setState( ({category}) => ({category: target.value}), () => this.enableSubmission() )\n  }\n\n  handleSubmit = event => {\n    event.preventDefault()\n\n    const {title, body, author, category, id, voteScore} = this.state\n    const {mode} = this.props\n\n    this.props[mode]({\n        id : id || Math.random().toString(24).substr(2, 24),\n        timestamp: Date.now(),\n        title,\n        body,\n        author,\n        category,\n        voteScore: voteScore || 1\n    })\n\n    this.showForm()\n  }\n\n  showForm = () => {\n    this.props.closer()\n    this.clearForm()\n  }\n\n  clearForm = () => {\n    this.setState( () => ({\n      title: '',\n      author : '',\n      body : '',\n      category: null\n    }))\n  }\n\n  componentDidMount(){\n\n    if(this.props.post){\n        const {title, author, body, category, id} = this.props.post\n\n        this.setState({\n          title,\n          author,\n          body,\n          category,\n          id\n        }, () => this.enableSubmission())\n    }\n\n  }\n\n  render(){\n\n    const {categories} = this.props\n    const {enableSubmission, title, author, category, body } = this.state\n\n    return (<div className=\"overlay modal\">\n              <h1>Create your amazing post</h1>\n              <form onSubmit={this.handleSubmit} className=\"new-post-form\">\n                <div className=\"field\">\n                    <input type=\"text\" name=\"title\" placeholder=\"Title\" defaultValue={title} onChange={this.updateTitle} />\n                </div>\n                <div className=\"field\">\n                    <input type=\"text\" name=\"author\" placeholder=\"Author\" autoComplete=\"name\" defaultValue={author} onChange={this.updateAuthor} />\n                </div>\n                <div className=\"field\">\n                    <select id=\"category\" onChange={this.updateCategory} value={category}>\n                      <option value=\"\">Category</option>\n                      {categories.map(cat => <option key={cat.path} value={cat.name} >{cat.name}</option>)}\n                    </select>\n                </div>\n                <div className=\"field\">\n                    <textarea placeholder=\"Post\" onChange={this.updateBody} value={body}></textarea>\n                </div>\n                <div className=\"field\">\n                  <button type=\"button\" onClick={this.showForm} className=\"cancel-published\">cancel</button>\n                  <button type=\"submit\" disabled={enableSubmission ? false : true}>Publish</button>\n                </div>\n              </form>\n              <div className=\"background\" onClick={this.showForm}></div>\n          </div>)\n  }\n\n}\n\nconst mapStateToProps = ({categories}) => {\n  return {categories}\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    newPost: post => dispatch(newPost(post)),\n    editPost: post => dispatch(editPost(post))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPostForm)\n\n","import React, { PureComponent } from 'react'\n\nexport default class Sorter extends PureComponent {\n\n\n  updateSort = ({target}) => {\n     this.props.func(target.value)\n  }\n\n  render() {\n    return (\n        <div className=\"sorter\">\n            <label htmlFor=\"sorter\">Sort</label>\n            <select id=\"sorter\" onChange={this.updateSort} defaultValue='voteScore'>\n                <option value=\"voteScore\">Rate</option>\n                <option value=\"timestamp\">Date</option>\n            </select>\n        </div>\n    )\n\n  }\n\n}\n","import React, {PureComponent} from 'react'\nimport { Link } from 'react-router-dom'\nimport PostHeader from './PostHeader'\nimport VoteControl from '../voteControl'\nimport NewPostForm from '../newPost/'\nimport Sorter from './Sorter'\n\nexport default class ListOfPosts extends PureComponent{\n\n  state = {\n    sorter: 'timestamp',\n    addNewPost: false\n  }\n\n  sortBy = modifier => {\n    this.setState( ({sorter}) => ( {\n      sorter: modifier\n    }))\n  }\n\n  addNewPost = () => this.setState(({addNewPost}) => ({addNewPost: !addNewPost}))\n\n  render(){\n\n    const {posts} = this.props\n    const {sorter, addNewPost} = this.state\n    const sortedPosts = sorter ? [...posts].sort( (p, n) => p[sorter] < n[sorter] ) : posts\n\n    return (\n      <React.Fragment>\n        <div className=\"tools\">\n          <Sorter func={(modifier) => this.sortBy(modifier)} />\n          <button onClick={this.addNewPost} type=\"button\">New Post</button>\n          {!!addNewPost && <NewPostForm mode=\"newPost\" closer={this.addNewPost} />}\n        </div>\n        <div className=\"post-wrp\">\n          {!sortedPosts.length && <h1>The Udacity team made only two shitty post, sorry greater user</h1>}\n          {!!sortedPosts.length && sortedPosts.filter(post => post).map(post => (\n              <article key={post.id} className=\"post\">\n                <Link to={`/${post.category}/${post.id}`}>\n                  <PostHeader post={post} />\n                </Link>\n                <VoteControl currentCount={post.voteScore} id={post.id} type=\"posts\"/>\n              </article>\n            ))\n          }\n        </div>\n      </React.Fragment>\n    )\n\n  }\n\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { loadCategories, setCategory } from './actions'\nimport { Link } from 'react-router-dom'\n\nclass PostSort extends Component {\n\n\n  componentDidMount() {\n    this.props.loadCats()\n  }\n\n  setCat = catName => {\n     this.props.changeCat(catName)\n  }\n\n  render() {\n\n    const { categories, currentCategory } = this.props\n\n    return <React.Fragment>\n      <ul>\n        {\n         categories.map(cat => (\n           <li key={cat.path}>\n              <Link\n                onClick={this.setCat.bind(this, cat.name)}\n                to={`/${cat.path}`}\n                className={ `category ${currentCategory === cat.name ? 'current' : ''}`}>\n                {cat.name}\n              </Link>\n           </li>\n          ))\n        }\n      </ul>\n    </React.Fragment>\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    categories: state.categories,\n    currentCategory: state.currentCategory\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeCat: (category) => dispatch(setCategory(category)),\n    loadCats: () => dispatch(loadCategories())\n  }\n}\n\nexport default  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(PostSort)\n\n","import React, {PureComponent} from 'react'\n\nexport default class PostBody extends PureComponent{\n\n  render(){\n    const {post} = this.props\n    return <p className=\"post-body\">{post.body}</p>\n  }\n\n}\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { addComment, editComment } from '../Comments/actions'\nimport {updateCommentCount} from '../AllPosts/actions'\n\nclass CommentForm extends PureComponent {\n\n  state = {\n    createComment : false,\n    author: '',\n    body: ''\n  }\n\n  handleName = event =>{\n    this.setState({author: event.target.value})\n  }\n\n  handleComment = event =>{\n    this.setState({body: event.target.value})\n  }\n\n  handleSubmit = event => {\n\n    event.preventDefault()\n\n    const {author, body, id, mode, parentId, voteScore} = this.state\n\n    this.props[mode]({\n      author,\n      body,\n      parentId,\n      voteScore: voteScore || 0,\n      timestamp : Date.now(),\n      id: id || Math.random().toString(24).substr(2, 24),\n    })\n\n    this.setState( () => ({ author:'', body:'' }), () => this.props.closer())\n\n    this.props.updateCommentCount({parentId, count: 1})\n\n  }\n\n  createComment = () => {\n    const createComment = !this.state.createComment\n    this.setState({createComment})\n  }\n\n  componentDidMount(){\n\n    const {comment, mode} = this.props\n    const parentId = this.props.id || comment.parentId\n\n    if(comment){\n\n      const {body, id, author, voteScore } = comment\n\n      this.setState({\n        body,\n        author,\n        voteScore,\n        id: id || Math.random().toString(24).substr(2, 24)\n      })\n\n    }\n\n    this.setState({mode, parentId})\n\n  }\n\n  render(){\n\n    const {author, body} = this.state\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"author\">Author</label>\n          <input type=\"text\" defaultValue={author} id=\"author\" name=\"author\" onChange={this.handleName} />\n        </div>\n        <div className=\"field\">\n          <label htmlFor=\"comment\">Comment</label>\n          <textarea id=\"Comment\" onChange={this.handleComment} value={body}></textarea>\n        </div>\n        <div className=\"field\">\n          <button type=\"submit\" disabled={!author || !body}>Enviar</button>\n        </div>\n      </form>\n    )\n\n  }\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addComment: comment => dispatch(addComment(comment)),\n    editComment: comment => dispatch(editComment(comment)),\n    updateCommentCount: updateComment =>  dispatch(updateCommentCount(updateComment))\n  }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n  )(CommentForm)\n\n","import React, {PureComponent} from 'react'\nimport VoteControl from '../voteControl'\nimport { connect } from 'react-redux'\nimport { deleteComment } from '../Comments/actions'\nimport CommentForm from '../CommentForm'\nimport {updateCommentCount} from '../AllPosts/actions'\n\nclass Comment extends PureComponent{\n\n  state = {\n    editing: false\n  }\n\n  editPost = () => {\n    this.setState( ({editing}) => ({editing: !editing}) )\n  }\n\n  deleteComment = () => {\n    const { deleteComment, comment, updateCommentCount} = this.props\n    const {parentId, id} = comment\n    deleteComment(id)\n    updateCommentCount({parentId, count: -1})\n  }\n\n  render(){\n\n    const {comment} = this.props\n    const {id, body, author, voteScore} = comment\n    const { editing } = this.state\n\n    return (<React.Fragment>\n      {\n        !editing ? <article className=\"comment\" key={id}>\n          <h5>{author}</h5>\n          <p>{body}</p>\n          <VoteControl currentCount={voteScore} id={id} type=\"comments\" />\n          <div className=\"post-tools\">\n            <button className=\"button small\" type=\"button\" id=\"delete-post\" onClick={ () => this.deleteComment(id)}>✕</button>\n            <button className=\"button small\" type=\"button\" id=\"edit-post\"  onClick={ () => this.editPost() } >✎</button>\n          </div>\n        </article> :\n        <CommentForm closer={this.editPost} comment={comment} mode=\"editComment\" />\n      }\n    </React.Fragment>)\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteComment: commentId => dispatch(deleteComment(commentId)),\n    updateCommentCount: updateComment =>  dispatch(updateCommentCount(updateComment))\n  }\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Comment)\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { loadComments } from './actions'\nimport { withRouter } from \"react-router\"\nimport Comment from '../Comment'\n\nclass CommentList extends PureComponent {\n\n  componentDidMount(){\n    this.props.loadComments(this.props.id)\n  }\n\n  render() {\n\n    const { comments , id} = this.props\n\n    return (\n      <section className=\"comments\">\n        <br />\n        <h2 className='heading'>Comments</h2>\n           {comments.length === 0 ?\n            <h3><i>There is no comment, and please keep that way</i></h3> :\n            comments.filter(comment => comment.parentId === id)\n            .map(comment => <Comment comment={comment} key={comment.id} />)\n          }\n      </section>\n    )\n\n  }\n\n}\n\nconst mapStateToProps = ({comments}) => {\n  return { comments }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadComments: id => dispatch(loadComments(id))\n  }\n}\n\nexport default withRouter(\n   connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(CommentList)\n)\n","import React, {PureComponent} from 'react'\n// import { connect } from 'react-redux'\n// import { loadPost } from './actions'\nimport PostHeader from '../AllPosts/PostHeader'\nimport PostBody from '../AllPosts/PostBody'\nimport {removePostById} from '../AllPosts/actions'\nimport CommentList from '../Comments'\nimport CommentForm from '../CommentForm'\nimport VoteControl from '../voteControl'\nimport { setCategory } from '../Categories/actions'\nimport { connect } from 'react-redux'\nimport NewPostForm from '../newPost'\n\nclass Single extends PureComponent{\n\n  state = {\n    editingPost : false,\n    creatingAcomment: false\n  }\n\n  componentDidMount(){\n    const {currentCategory, changeCat} = this.props\n    changeCat(currentCategory)\n  }\n\n  editCurrentPost = () => {\n    this.setState(({editingPost}) => ({editingPost: !editingPost}))\n  }\n\n  createComment = () => {\n      this.setState(({creatingAcomment}) => ({creatingAcomment: !creatingAcomment}))\n  }\n\n  render(){\n\n    const {editingPost, creatingAcomment} = this.state\n    const {post, deletePost} = this.props\n\n    if (!post.length){\n      return <h2>You have deleted a post that was here for decades</h2>\n    }\n\n    return <React.Fragment>\n      {\n          post.map(post => (\n            <article key={post.id} className=\"post single\">\n              <div className=\"single-wrp\">\n                <PostHeader post={post} />\n                <VoteControl currentCount={post.voteScore} id={post.id} type=\"posts\" />\n                <PostBody post={post} />\n                <div className=\"post-tools\">\n                  <button className=\"button small\" type=\"button\" id=\"delete-post\" onClick={() => deletePost(post.id)}>✕</button>\n                  <button className=\"button small\" type=\"button\" id=\"edit-post\" onClick={this.editCurrentPost}>✎</button>\n                </div>\n              </div>\n              <CommentList id={post.id} />\n              {!creatingAcomment && <button type=\"button\" onClick={this.createComment}>ok, share your amazing opinion</button>}\n              {!!creatingAcomment && <CommentForm id={post.id} closer={this.createComment} mode=\"addComment\" />}\n            </article>\n          ))\n      }\n      {!!editingPost && <NewPostForm post={{...post[0]}} mode=\"editPost\" closer={this.editCurrentPost} />}\n    </React.Fragment>\n\n  }\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    changeCat: (category) => dispatch(setCategory(category)),\n    deletePost: postId => dispatch(removePostById(postId))\n  }\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Single)\n","import React, { Component } from 'react'\nimport Posts from './AllPosts'\nimport Categories from './Categories'\nimport Single from './Single'\nimport { connect } from 'react-redux'\nimport { Route, Switch, withRouter, Link } from 'react-router-dom'\nimport { getPosts } from './AllPosts/actions'\nimport { setCategory } from './Categories/actions'\n\nclass App extends Component {\n\n  state = {\n    posts: []\n  }\n\n  filterByCategory(posts, category) {\n    return posts.filter(post => post.category === category)\n  }\n\n  filterById(posts, id) {\n    return posts.filter(post => post).filter(post => post.id === id)\n  }\n\n  setCat = (catName) => {\n     this.props.changeCat(catName)\n  }\n\n  async componentDidMount(){\n    await this.props.getPosts()\n  }\n\n  // shouldComponentUpdate({posts}, prevState){\n  //   const found = this.props.posts.find( (post, x) => post.voteScore !== posts[x].voteScore )\n  //   return found ? false : true\n  // }\n\n  render() {\n\n    const {posts, currentCategory} = this.props\n\n    return (\n      <main>\n        <nav className=\"navigation\">\n          <h1><Link to={`/`} onClick={this.setCat.bind(this, null)} >Readable </Link></h1>\n          <Categories currentCategory={currentCategory} />\n        </nav>\n        <section>\n          <Switch>\n            <Route exact path='/' render={ () => <Posts posts={posts} />} />\n            <Route exact path='/:category' render={ ({ match }) => ( <Posts posts={this.filterByCategory(posts, match.params.category)} /> )} />\n            <Route exact path='/:category/:id' render={ ({ match }) => ( <Single post={this.filterById(posts, match.params.id)} currentCategory={match.params.category} /> )} />\n          </Switch>\n        </section>\n      </main>\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.posts,\n    loading: state.listState,\n    currentCategory: state.currentCategory\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getPosts: category => dispatch(getPosts(category)),\n    changeCat: (category) => dispatch(setCategory(category)),\n  }\n}\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App))\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport combinedReducers from './combinedReducers'\nimport App from './App'\nimport './main.css'\n\nconst logger = store => next => action => {\n  console.group(action.type)\n  console.info('dispatching', action)\n  const result = next(action)\n  console.log('next state', store.getState())\n  console.groupEnd(action.type)\n  return result\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(\n  combinedReducers,\n  composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n  )\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}